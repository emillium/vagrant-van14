---
- name: Check if private key exists on host
  stat: path=/vagrant/provision/files/ssh/id_rsa
  register: private_key_host

- name: Check if public key exists on host
  stat: path=/vagrant/provision/files/ssh/id_rsa.pub
  register: public_key_host

- name: Check if private key exists on guest
  stat: path=/home/vagrant/.ssh/id_rsa
  register: private_key_guest

- name: Check if public key exists on guest
  stat: path=/home/vagrant/.ssh/id_rsa.pub
  register: public_key_guest

- name: Create ssh directory
  file: path=/home/vagrant/.ssh state=directory mode=0700 owner=vagrant group=vagrant

- name: Send private key to guest
  command: cp /vagrant/provision/files/ssh/id_rsa /home/vagrant/.ssh/
  when: private_key_host.stat.exists == True and vm.ssh.forward == '0'

- name: Send private key to guest
  command: cp /vagrant/provision/files/ssh/id_rsa.pub /home/vagrant/.ssh/
  when: public_key_host.stat.exists == True and vm.ssh.forward == '0'

- name: Public key permissions
  file: path=/home/vagrant/.ssh/id_rsa.pub mode=0644 owner=vagrant group=vagrant
  when: public_key_guest.stat.exists == True

- name: Private key permissions
  file: path=/home/vagrant/.ssh/id_rsa mode=0600 owner=vagrant group=vagrant
  when: private_key_guest.stat.exists == True

- name: Authorized key permissions
  file: path=/home/vagrant/.ssh/authorized_keys mode=0600 state=touch owner=vagrant group=vagrant

- name: Public keys added to authorized keys
  shell: "cat /home/vagrant/.ssh/id_rsa.pub >> /home/vagrant/.ssh/authorized_keys"
  when: public_key_guest.stat.exists == True

- name: Make sure the known hosts file exists
  file: "path={{ vm.ssh.known_hosts_file }} state=touch"

- name: Scan the public key
  shell: "{{ vm.ssh.known_hosts_command}} {{ item }}"
  with_items: vm.ssh.known_hosts
  register: known_hosts

- name: Load public keys
  lineinfile: dest={{ vm.ssh.known_hosts_file }} line="{{ item.stdout }}" state=present
  with_items: known_hosts.results
